/**************************************************************************
 * Copyright (c) 2002-2009, Tobias Ringstr√∂m <tobias@ringis.se>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    - Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    - Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in
 *      the documentation and/or other materials provided with the
 *      distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 **************************************************************************/
/** \file Porting.dox
  * \brief Porting GyrOS.
  */

/** \page porting Porting GyrOS

The GyrOS source code is divided into three parts:

\li The first is the generic part, which consists of code common for
    all ports.  This is the major part of GyrOS, and it's where task
    management and synchronization objects are implemented.
\li The second part is the a architecture specific part, which is code
    used by a whole set of processors or microcontroller, e.g. support
    for ARM.  The architecture code implements things like low level
    task switching and interrupt masking.
\li The third part is the code which is specific for the target
    processor or microcontroller, like the ARM based Atmel AT91SAM7S.
    This part implements timers, startup code and exception handling,
    and is normally quite straightforward to implement if the
    architecture is already supported.

\section arch_support Architecture support

\subsection gyros__target_init

\section chip_support Chip support

*/
